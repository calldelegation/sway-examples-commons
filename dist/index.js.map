{"version":3,"sources":["../src/components/OnboardingFlow.tsx","../src/components/WelcomePage.tsx","../src/components/Text.tsx","../src/components/OnboardingTopBar.tsx","../src/utils/isSafari.ts","../src/components/FaucetPage.tsx","../src/config.ts","../src/components/SuccessPage.tsx","../src/components/OnboardingFlowProvider.tsx","../src/hooks/useBreakpoints.ts"],"sourcesContent":["import { Box, Dialog, DialogContent, Stack } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\n\nimport { WelcomePage } from \"./WelcomePage\";\nimport { OnboardingTopBar, CurrentStep } from \"./OnboardingTopBar\";\nimport { FaucetPage } from \"./FaucetPage\";\nimport { SuccessPage } from \"./SuccessPage\";\nimport { useBreakpoints } from \"src/hooks/useBreakpoints\";\nimport { useOnboardingFlowContext } from \"./OnboardingFlowProvider\";\nimport { useBalance, useWallet } from \"@fuels/react\";\n\ntype OnboardingFlowProps = {\n  container?: Element | (() => Element | null) | null;\n};\n\nexport const OnboardingFlow = ({ container }: OnboardingFlowProps) => {\n  const { openDialog } = useOnboardingFlowContext();\n  const [currentStep, setCurrentStep] = useState(CurrentStep.Welcome);\n  const { isMobile } = useBreakpoints();\n  const { wallet } = useWallet();\n  const { balance, refetch: refetchBalance } = useBalance({\n    address: wallet?.address.toString(),\n  });\n\n  useEffect(() => {\n    const interval = setInterval(refetchBalance, 500);\n    if (balance && balance.gt(0)) {\n      setCurrentStep(CurrentStep.Success);\n    }\n    return () => clearInterval(interval);\n  }, [balance]);\n\n  return (\n    <Dialog\n      fullScreen={isMobile}\n      container={container}\n      open={openDialog}\n      id=\"onboarding\"\n      PaperProps={{ className: \"p-8 w-full bg-black border-slate-600 border\" }}\n    >\n      <DialogContent>\n        <Stack spacing={4} className=\"items-center\">\n          <OnboardingTopBar currentStep={currentStep} />\n\n          <Box className=\"flex w-full justify-center items-center\">\n            {currentStep === CurrentStep.Welcome ? (\n              <WelcomePage\n                message=\"Welcome to Sway NFT!\"\n                messageProps={{ className: \"text-xl\" }}\n                setCurrentStep={setCurrentStep}\n              />\n            ) : currentStep === CurrentStep.Faucet ? (\n              <FaucetPage setCurrentStep={setCurrentStep} />\n            ) : (\n              <SuccessPage message=\"Success!\" />\n            )}\n          </Box>\n        </Stack>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import { Box, Button, Stack } from \"@mui/material\";\nimport {\n  useConnectUI,\n  useConnect,\n  useIsConnected,\n  useWallet,\n  useBalance,\n} from \"@fuels/react\";\nimport { useEffect, useState } from \"react\";\nimport toast from \"react-hot-toast\";\n\nimport { Text, TextProps } from \"./Text\";\nimport { CurrentStep } from \"./OnboardingTopBar\";\nimport { isSafari } from \"src/utils\";\n\ntype WelcomePageProps = {\n  message?: string;\n  messageProps?: TextProps;\n  setCurrentStep: (currentStep: CurrentStep) => void;\n};\n\nexport const WelcomePage = ({\n  message,\n  messageProps,\n  setCurrentStep,\n}: WelcomePageProps) => {\n  const { connect: connectUI } = useConnectUI();\n  const { connect: connectBurner } = useConnect();\n  const {\n    wallet,\n    isLoading: isLoadingWallet,\n    isPending: isPendingWallet,\n    isFetching: isFetchingWallet,\n  } = useWallet();\n  const {\n    balance,\n    isFetching: isFetchingBalance,\n    isPending: isPendingBalance,\n    isLoading: isLoadingBalance,\n  } = useBalance({\n    address: wallet?.address.toString(),\n  });\n  const { isConnected } = useIsConnected();\n\n  const isBalanceLoading =\n    (isFetchingBalance || isPendingBalance || isLoadingBalance);\n  const isWalletLoading =\n    isLoadingWallet || isPendingWallet || isFetchingWallet;\n\n  useEffect(() => {\n    if (isConnected && wallet) {\n      if (balance && balance.gt(0)) {\n        setCurrentStep(CurrentStep.Success);\n      } else if (!isBalanceLoading) {\n        if (isSafari) {\n          const redirectUrl = new URL(\"https://faucet-testnet.fuel.network/\");\n          redirectUrl.searchParams.append(\"address\", wallet.address.toString());\n          redirectUrl.searchParams.append(\"redirectUrl\", window.location.href);\n          window.location.href = redirectUrl.href;\n        } else {\n          setCurrentStep(CurrentStep.Faucet);\n        }\n      }\n    }\n  }, [isConnected, wallet, balance, isBalanceLoading]);\n\n  return (\n    <Stack spacing={3} className=\"w-5/6 items-center\">\n      {message && <Text {...messageProps}>{message}</Text>}\n      {isWalletLoading ? (\n        <Text>Loading...</Text>\n      ) : (\n        <>\n          <Button\n            className=\"btn-primary h-12 w-full\"\n            onClick={() => {\n              connectBurner(\"Burner Wallet\");\n            }}\n          >\n            Temporary Wallet\n          </Button>\n          <Box className=\"border-b-2 border-slate-600 w-full\" />\n          <Button\n            variant=\"outlined\"\n            className=\"text-white h-12 w-full border-slate-600\"\n            onClick={() => {\n              connectUI();\n            }}\n          >\n            Connect\n          </Button>\n        </>\n      )}\n    </Stack>\n  );\n};\n","import { Typography, TypographyProps } from \"@mui/material\";\n\nexport type TextProps = TypographyProps;\n\nexport const Text = ({ children, className, ...props }: TextProps) => {\n  return (\n    <Typography {...props} className={`text-white font-sans ${className}`}>\n      {children}\n    </Typography>\n  );\n};\n","import { Box } from \"@mui/material\";\n\nimport { Text } from \"./Text\";\n\nexport enum CurrentStep {\n  Welcome,\n  Faucet,\n  Success,\n}\n\ntype OnboardingTopBarProps = {\n  currentStep: CurrentStep;\n};\n\nexport const OnboardingTopBar = ({ currentStep }: OnboardingTopBarProps) => {\n  return (\n    <Box className=\"flex w-full items-center justify-around\">\n      <Text\n        className={\n          currentStep === CurrentStep.Welcome ? \"\" : \"!text-slate-600\" // TODO: clsx might help remove the need for !\n        }\n      >\n        1. Welcome\n      </Text>\n      <Text\n        className={currentStep === CurrentStep.Faucet ? \"\" : \"!text-slate-600\"}\n      >\n        2. Faucet\n      </Text>\n      <Text\n        className={currentStep === CurrentStep.Success ? \"\" : \"!text-slate-600\"}\n      >\n        3. Success\n      </Text>\n    </Box>\n  );\n};\n","\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n","import { useWallet, useBalance } from \"@fuels/react\";\nimport { useEffect, useState } from \"react\";\n\nimport { Text } from \"./Text\";\nimport { TESTNET_FAUCET_LINK } from \"../config\";\nimport { CurrentStep } from \"./OnboardingTopBar\";\n\ntype FaucetPageProps = {\n  setCurrentStep: (currentStep: CurrentStep) => void;\n};\n\nexport const FaucetPage = ({ setCurrentStep }: FaucetPageProps) => {\n  const {\n    wallet,\n    isLoading: isLoadingWallet,\n    isPending: isPendingWallet,\n    isFetching: isFetchingWallet,\n  } = useWallet();\n  const {\n    isPending: isPendingBalance,\n    isLoading: isLoadingBalance,\n    isFetching: isFetchingBalance,\n  } = useBalance({ address: wallet?.address.toString() });\n  const [className, setClassName] = useState(\"\");\n  const isLoading =\n    isLoadingWallet ||\n    isPendingWallet ||\n    isFetchingWallet ||\n    (!wallet && (isPendingBalance || isLoadingBalance || isFetchingBalance));\n\n  // TODO: fix, this does not work\n  // the gray cloud flare page does not have top margin\n  // the white page does, so we try to remove margin when logo appears\n  useEffect(() => {\n    const logo = document.getElementsByClassName(\"fuel-logo\");\n    if (logo) {\n      setClassName(\"overflow-hidden h-[800px]\");\n    }\n  }, []);\n\n  if (isLoading) return <Text>Loading...</Text>;\n\n  if (!wallet) return <Text>Wallet not found</Text>;\n\n  return (\n    <iframe\n      src={`${TESTNET_FAUCET_LINK}?address=${wallet.address.toAddress()}`}\n      id=\"test\"\n      width=\"100%\"\n      height=\"800px\"\n      className={className}\n    >\n      hello\n    </iframe>\n  );\n};\n","export const TESTNET_FAUCET_LINK = \"https://faucet-testnet.fuel.network/\";\n","import { Button, Stack } from \"@mui/material\";\nimport { Text } from \"./Text\";\nimport { useOnboardingFlowContext } from \"./OnboardingFlowProvider\";\n\ntype SuccessPageProps = {\n  message?: string;\n};\n\nexport const SuccessPage = ({ message }: SuccessPageProps) => {\n  const { setOpenDialog } = useOnboardingFlowContext();\n  \n  return (\n    <Stack spacing={2} className=\"items-center w-full\">\n      {message && <Text>{message}</Text>}\n      <Button\n        className=\"btn-primary h-12 w-3/4\"\n        onClick={() => setOpenDialog(false)}\n      >\n        Continue to App\n      </Button>\n    </Stack>\n  );\n};\n","import { createContext, useContext, useEffect, useState } from \"react\";\nimport { FuelProvider, useIsConnected } from \"@fuels/react\";\nimport { defaultConnectors } from \"@fuels/connectors\";\n\nimport { Toaster } from \"react-hot-toast\";\n\nexport type OnboardingFlowContextType = {\n  openDialog: boolean;\n  setOpenDialog: (open: boolean) => void;\n};\n\nexport const OnboardingFlowContext =\n  createContext<OnboardingFlowContextType | null>(null);\n\nexport const useOnboardingFlowContext = () => {\n  const context = useContext(\n    OnboardingFlowContext\n  ) as OnboardingFlowContextType;\n  if (!context) {\n    throw new Error(\n      \"useOnboardingFlowContext must be used within OnboardingFlowProvider\"\n    );\n  }\n  return context;\n};\n\nexport const OnboardingFlowProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}) => {\n  const { isConnected } = useIsConnected();\n  const [openDialog, setOpenDialog] = useState(!isConnected);\n\n  // useEffect(() => {\n  //   if (!is)\n  //     setOpenDialog(!isConnected);\n  // }, [isConnected])\n\n  return (\n    // <FuelProvider fuelConfig={{ connectors: defaultConnectors() }}>\n      <OnboardingFlowContext.Provider value={{ openDialog, setOpenDialog }}>\n        <Toaster />\n        {children}\n      </OnboardingFlowContext.Provider>\n    // </FuelProvider>\n  );\n};\n","import { useMedia } from \"react-use\";\n\nexport const useBreakpoints = () => {\n    const isMobile = useMedia(\"(max-width: 640px)\", false);\n    const isTablet = useMedia(\"(max-width: 768px)\", true);\n\n    return { isMobile, isTablet };\n}\n"],"mappings":"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","names":["Box","Stack","useEffect","useState","Box","jsx","jsx","jsx","jsxs","Box","useWallet","useBalance","useEffect","useState","jsx","useWallet","useBalance","useState","useEffect","Button","Stack","useState","useIsConnected","jsx","jsxs","jsx","jsxs","Stack","Button","useBalance","useWallet","jsx","jsxs","useState","useEffect","Stack","Box"]}